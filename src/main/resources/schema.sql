DROP TABLE IF EXISTS "events";
DROP TABLE IF EXISTS "review_likes";
DROP TABLE IF EXISTS "reviews";
DROP TABLE IF EXISTS "films_directors";
DROP TABLE IF EXISTS "films_genres";
DROP TABLE IF EXISTS "film_likes";
DROP TABLE IF EXISTS "user_friends";
DROP TABLE IF EXISTS "films";
DROP TABLE IF EXISTS "users";
DROP TABLE IF EXISTS "mpa";
DROP TABLE IF EXISTS "genres";
DROP TABLE IF EXISTS "directors";

CREATE TABLE IF NOT EXISTS PUBLIC."users" (
	USER_ID BIGINT NOT NULL AUTO_INCREMENT,
	EMAIL CHARACTER VARYING(50) NOT NULL,
	LOGIN CHARACTER VARYING(50) NOT NULL,
	NAME CHARACTER VARYING(50),
	BIRTHDAY DATE NOT NULL,
	CONSTRAINT USER_PK PRIMARY KEY (USER_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC."user_friends" (
	USER_ID BIGINT NOT NULL,
	FRIEND_USER_ID BIGINT NOT NULL,
	IS_ACCEPTED BOOLEAN DEFAULT FALSE NOT NULL,
	CONSTRAINT USER_FRIENDS_PK PRIMARY KEY (USER_ID,FRIEND_USER_ID),
    CONSTRAINT USER_ID_FK1 FOREIGN KEY (USER_ID) REFERENCES PUBLIC."users"(USER_ID) ON DELETE CASCADE ON UPDATE RESTRICT,
    CONSTRAINT FRIEND_USER_ID_FK FOREIGN KEY (FRIEND_USER_ID) REFERENCES PUBLIC."users"(USER_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS PUBLIC."mpa" (
	MPA_ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(10) NOT NULL,
	CONSTRAINT MPA_PK PRIMARY KEY (MPA_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC."genres" (
	GENRE_ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50) NOT NULL,
	CONSTRAINT GENRES_PK PRIMARY KEY (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC."directors" (
	DIRECTOR_ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(255) NOT NULL,
	constraint uq1 unique (NAME),
	CONSTRAINT DIRECTORS_PK PRIMARY KEY (DIRECTOR_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC."films" (
	FILM_ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(255) NOT NULL,
	DESCRIPTION CHARACTER VARYING(255) NOT NULL,
	RELEASE_DATE DATE,
	DURATION BIGINT NOT NULL,
	RATE BIGINT NOT NULL,
	MPA_ID BIGINT,
	CONSTRAINT FILM_PK PRIMARY KEY (FILM_ID),
	CONSTRAINT MPA_ID_FK FOREIGN KEY (MPA_ID) REFERENCES PUBLIC."mpa"(MPA_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS PUBLIC."film_likes" (
	FILM_ID BIGINT NOT NULL,
	USER_ID BIGINT NOT NULL,
	CONSTRAINT FILM_LIKES_PK PRIMARY KEY (FILM_ID,USER_ID),
	CONSTRAINT FILM_ID_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC."films"(FILM_ID) ON DELETE CASCADE ON UPDATE RESTRICT,
	CONSTRAINT USER_ID_FK2 FOREIGN KEY (USER_ID) REFERENCES PUBLIC."users"(USER_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS PUBLIC."films_genres" (
	FILM_ID BIGINT NOT NULL,
	GENRE_ID BIGINT NOT NULL,
	CONSTRAINT FILMS_GENRES_PK PRIMARY KEY (FILM_ID,GENRE_ID),
	CONSTRAINT FILMS_GENRES_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC."films"(FILM_ID) ON DELETE CASCADE ON UPDATE RESTRICT,
	CONSTRAINT FILMS_GENRES_FK2 FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC."genres"(GENRE_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS PUBLIC."films_directors" (
	FILM_ID BIGINT NOT NULL,
	DIRECTOR_ID BIGINT NOT NULL,
	CONSTRAINT FILMS_DIRECTORS_PK PRIMARY KEY (FILM_ID,DIRECTOR_ID),
	CONSTRAINT FILMS_DIRECTORS_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC."films"(FILM_ID) ON DELETE CASCADE ON UPDATE RESTRICT,
	CONSTRAINT FILMS_DIRECTORS_FK2 FOREIGN KEY (DIRECTOR_ID) REFERENCES PUBLIC."directors"(DIRECTOR_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS PUBLIC."reviews" (
	REVIEW_ID BIGINT NOT NULL AUTO_INCREMENT,
	CONTENT CHARACTER VARYING(1000) NOT NULL,
	IS_POSITIVE BOOLEAN NOT NULL,
	USER_ID BIGINT NOT NULL,
	FILM_ID BIGINT NOT NULL,
	USEFUL BIGINT NOT NULL DEFAULT 0,
	CONSTRAINT REVIEWS_PK PRIMARY KEY (REVIEW_ID),
    CONSTRAINT REVIEWS_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC."films"(FILM_ID) ON DELETE CASCADE ON UPDATE RESTRICT,
    CONSTRAINT REVIEWS_FK2 FOREIGN KEY (USER_ID) REFERENCES PUBLIC."users"(USER_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS PUBLIC."review_likes" (
	REVIEW_ID BIGINT NOT NULL,
	USER_ID BIGINT NOT NULL,
	IS_LIKED BOOLEAN NOT NULL,
	CONSTRAINT REVIEW_LIKE_ID  PRIMARY KEY (REVIEW_ID,USER_ID),
	CONSTRAINT REVIEW_ID_RL FOREIGN KEY (REVIEW_ID) REFERENCES PUBLIC."reviews"(REVIEW_ID) ON DELETE CASCADE ON UPDATE RESTRICT,
	CONSTRAINT USER_ID_RL2 FOREIGN KEY (USER_ID) REFERENCES PUBLIC."users"(USER_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS PUBLIC."events" (
	EVENT_ID BIGINT NOT NULL AUTO_INCREMENT,
    USER_ID BIGINT NOT NULL,
	EVENT_TYPE CHARACTER VARYING(10) not null,
	OPERATION CHARACTER VARYING(10) not null,
    TIMESTAMP BIGINT NOT NULL,
    ENTITY_ID BIGINT NOT NULL,
	CONSTRAINT EVENTS_PK PRIMARY KEY (EVENT_ID),
    CONSTRAINT EVENTS_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC."users"(USER_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);